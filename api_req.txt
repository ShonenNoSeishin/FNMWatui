##################
## API requests ##
##################

## Hostgroup ##
# changer le nom de l'hostgroup test
curl -X GET -u admin:<API_PWD> http://192.168.3.114:10007/hostgroup/test/name/<Nom_Hostgroup>

# mettre enable ban à true
curl -X GET -u admin:<API_PWD> http://192.168.3.114:10007/hostgroup/test/enable_ban/<true OU false>

# mettre le threshold mbps à 10 
curl -X GET -u admin:<API_PWD> http://192.168.3.114:10007/hostgroup/test/threshold_mbps/<Valeur_Mbps>

# mettre le threshold ppps à 10 
curl -X GET -u admin:<API_PWD> http://192.168.3.114:10007/hostgroup/test/threshold_pps/<Caleur_Pps>

# mettre le threshold flow à 10 
curl -X GET -u admin:<API_PWD> http://192.168.3.114:10007/hostgroup/test/threshold_flows/<Valeur_flows>

# supprimer un hostgroup
curl -X DELETE -u admin:<API_PWD> http://192.168.3.114:10007/hostgroup/<Nom_Groupe>

## Networks
# voir les networks listés (attention que cette interface n'envoie pas les networks à l'API, elle se base sur sa propre base de données pour ce qui est des networks)
curl -X GET -u admin:<API_PWD> http://192.168.3.114:10007/main/networks_list


## Flowspec
# Voir les règles flowspec 
curl -X GET -u admin:<API_PWD> http://192.168.3.114:10007/flowspec

# ajouter une règle 
il faut ajouter à la commande précédente un JSON comme :
{"action_type": "discard", "destination_prefix": "10.0.0.54/32", "protocols": ["icmp"], "source_ports": [80], "source_prefix": "10.16.0.24/32"} 
par exemple, mais dans l'URL il faut formater ça correctement donc c'est plus compliqué, dans le code python on passe directement le JSON dans la fonction "insert_flowspec_route"

# supprimer une règle 
curl -X DELETE -u admin:<API_PWD> http://192.168.3.114:10007/flowspec/54f23c6b-650b-4aed-aa53-8eda94fab549


## enable/disable ban général
# voir si c'est activé ou pas
curl -X GET -u admin:<API_PWD> http://192.168.3.114:10007/main/enable_ban

# activer
curl -X PUT -u admin:<API_PWD> http://192.168.3.114:10007/main/enable_ban/true

# désactiver
curl -X PUT -u admin:<API_PWD> http://192.168.3.114:10007/main/enable_ban/false


## informations de trafic
# Récupérer des infos sur le traffic réseau courant 
curl -X GET -u admin:<API_PWD> http://192.168.3.114:10007/host_counters

# Récupérer toutes les informations de trafic
curl -X GET -u admin:<API_PWD> http://192.168.3.114:10007/total_traffic_counters


## Blackholes 
# Récupérer la liste des blackholes
curl -X GET -u admin:<API_PWD> http://192.168.3.114:10007/blackhole

# Configurer un blackhole pour ban une ip
curl -X PUT -u admin:<API_PWD> http://192.168.3.114:10007/blackhole/<IP>

# Unban une ip blackhole
curl -X DELETE -u admin:<API_PWD> http://192.168.3.114:10007/blackhole/<Blackhole_UID>


## license
# voir les info de la license FNM
curl -X GET -u admin:<API_PWD> http://192.168.3.114:10007/license